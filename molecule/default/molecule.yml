---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  - name: instance-01
    image: ubuntu:20.04
    groups:
      - group_name
    command: /sbin/init
    # if you're using latest versions of ubuntu (22.04), check your default cgroup version.
    # command: stat -c %T -f /sys/fs/cgroup
    # if it is cgroup2fs, then change /etc/default/grub file, GRUB_CMDLINE_LINUX="systemd.unified_cgroup_hierarchy=0"
    # update grub (sudo update-grub), reboot system to eplly changes
    volumes:
     - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    override_command: false
    networks:
      - name: name_network
##  Systemd template:
#  - &default_platform
#    name: some-instance-01
#    hostname: some-instance-01
#    image: mpaivabarbosa/molecule-systemd-ubuntu:20.04
#    groups:
#      - some_group
#    command: /sbin/init
#    security_opts:
#      - seccomp=unconfined
#    volumes:
#     - /sys/fs/cgroup:/sys/fs/cgroup:ro
#    privileged: true
#    pre_build_image: true
#    override_command: false
#    networks:
#      - name: some
#  - <<: *default_platform
#    name: some-instance-02
#    hostname: some-instance-02
provisioner:
  name: ansible
verifier:
  name: ansible
lint: |
  yamllint .
  ansible-lint
scenario:
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
